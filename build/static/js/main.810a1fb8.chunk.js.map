{"version":3,"sources":["App.js","components/Results.js","components/KeyPad.js","serviceWorker.js","index.js"],"names":["App","_this","Object","C_Personal_Projects_Calculator_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Personal_Projects_Calculator_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Personal_Projects_Calculator_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onClick","button","calculate","reset","backspace","setState","result","state","checkResult","includes","replace","eval","e","slice","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_components_Results__WEBPACK_IMPORTED_MODULE_7__","_components_KeyPad__WEBPACK_IMPORTED_MODULE_8__","Component","Results","props","KeyPad","name","target","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.810a1fb8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Results from \"./components/Results\";\nimport KeyPad from \"./components/KeyPad\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      result: \"\"\n    };\n  }\n\n  onClick = button => {\n    if (button === \"=\") {\n      this.calculate();\n    } else if (button === \"C\") {\n      this.reset();\n    } else if (button === \"CE\") {\n      this.backspace();\n    } else {\n      this.setState({\n        result: this.state.result + button\n      });\n    }\n  };\n\n  calculate = () => {\n    var checkResult = \"\";\n    if (this.state.result.includes(\"--\")) {\n      checkResult = this.state.result.replace(\"--\", \"+\");\n    } else {\n      checkResult = this.state.result;\n    }\n\n    try {\n      this.setState({\n        // eslint-disable-next-line\n        result: (eval(checkResult) || \"\") + \"\"\n      });\n    } catch (e) {\n      this.setState({\n        result: \"error\"\n      });\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      result: \"\"\n    });\n  };\n\n  backspace = () => {\n    this.setState({\n      result: this.state.result.slice(0, -1)\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"calculator-body\">\n          <h1>Simple Calculator</h1>\n          <Results result={this.state.result} />\n          <KeyPad onClick={this.onClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\n\r\nclass Results extends Component {\r\n  render() {\r\n    let { result } = this.props;\r\n    return (\r\n      <div className=\"result\">\r\n        <p>{result}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\r\n\r\nclass KeyPad extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"button\">\r\n        <button name=\"(\" onClick={e => this.props.onClick(e.target.name)}>\r\n          (\r\n        </button>\r\n        <button name=\"CE\" onClick={e => this.props.onClick(e.target.name)}>\r\n          CE\r\n        </button>\r\n        <button name=\")\" onClick={e => this.props.onClick(e.target.name)}>\r\n          )\r\n        </button>\r\n        <button name=\"C\" onClick={e => this.props.onClick(e.target.name)}>\r\n          C\r\n        </button>{\" \"}\r\n        <br />\r\n        <button name=\"1\" onClick={e => this.props.onClick(e.target.name)}>\r\n          1\r\n        </button>\r\n        <button name=\"2\" onClick={e => this.props.onClick(e.target.name)}>\r\n          2\r\n        </button>\r\n        <button name=\"3\" onClick={e => this.props.onClick(e.target.name)}>\r\n          3\r\n        </button>\r\n        <button name=\"+\" onClick={e => this.props.onClick(e.target.name)}>\r\n          +\r\n        </button>{\" \"}\r\n        <br />\r\n        <button name=\"4\" onClick={e => this.props.onClick(e.target.name)}>\r\n          4\r\n        </button>\r\n        <button name=\"5\" onClick={e => this.props.onClick(e.target.name)}>\r\n          5\r\n        </button>\r\n        <button name=\"6\" onClick={e => this.props.onClick(e.target.name)}>\r\n          6\r\n        </button>\r\n        <button name=\"-\" onClick={e => this.props.onClick(e.target.name)}>\r\n          -\r\n        </button>{\" \"}\r\n        <br />\r\n        <button name=\"7\" onClick={e => this.props.onClick(e.target.name)}>\r\n          7\r\n        </button>\r\n        <button name=\"8\" onClick={e => this.props.onClick(e.target.name)}>\r\n          8\r\n        </button>\r\n        <button name=\"9\" onClick={e => this.props.onClick(e.target.name)}>\r\n          9\r\n        </button>\r\n        <button name=\"*\" onClick={e => this.props.onClick(e.target.name)}>\r\n          x\r\n        </button>{\" \"}\r\n        <br />\r\n        <button name=\".\" onClick={e => this.props.onClick(e.target.name)}>\r\n          .\r\n        </button>\r\n        <button name=\"0\" onClick={e => this.props.onClick(e.target.name)}>\r\n          0\r\n        </button>\r\n        <button name=\"=\" onClick={e => this.props.onClick(e.target.name)}>\r\n          =\r\n        </button>\r\n        <button name=\"/\" onClick={e => this.props.onClick(e.target.name)}>\r\n          /\r\n        </button>{\" \"}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeyPad;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}